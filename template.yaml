AWSTemplateFormatVersion: 2010-09-09
Description: >-
  sam-crud-sample

Transform:
- AWS::Serverless-2016-10-31

Parameters:
  Architecture:
    Type: String
    Default: x86_64
    #Default: arm64      

Resources:
  api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: lambdaTokenAuthorizer
        Authorizers:
          lambdaTokenAuthorizer:
            FunctionArn: !GetAtt authFunction.Arn

  authFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/handlers
      Handler: auth.handler
      Runtime: nodejs18.x

  getAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/item-handlers.itemHandler
      Runtime: nodejs18.x
      Architectures:
        - !Sub ${Architecture}
      MemorySize: 128
      Timeout: 100
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ItemTable
      Environment:
        Variables:
          ITEM_TABLE: !Ref ItemTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref api
            Path: /items
            Method: GET

  getItemByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/item-handlers.itemHandler
      Runtime: nodejs18.x
      Architectures:
        - !Sub ${Architecture}
      MemorySize: 128
      Timeout: 100
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ItemTable
      Environment:
        Variables:
          ITEM_TABLE: !Ref ItemTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref api
            Path: /items/{id}
            Method: GET

  putItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/item-handlers.itemHandler
      Runtime: nodejs18.x
      Architectures:
        - !Sub ${Architecture}
      MemorySize: 128
      Timeout: 100
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ItemTable
      Environment:
        Variables:
          ITEM_TABLE: !Ref ItemTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref api
            Path: /items
            Method: POST

  softDeleteItemByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/item-handlers.itemHandler
      Runtime: nodejs18.x
      Architectures:
        - !Sub ${Architecture}
      MemorySize: 128
      Timeout: 100
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ItemTable
      Environment:
        Variables:
          ITEM_TABLE: !Ref ItemTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref api
            Path: /items/{id}
            Method: DELETE

  # { 'id': STRING, 'name': STRING, 'isActive': BOOLEAN }
  ItemTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: ItemTable
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    #Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
    Value: !Sub "https://${api}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
